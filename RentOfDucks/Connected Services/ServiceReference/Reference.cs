//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RentOfDucks.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/WcfRentOfDucks")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Orders", Namespace="http://schemas.datacontract.org/2004/07/WcfRentOfDucks")]
    [System.SerializableAttribute()]
    public partial class Orders : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime date_beginningField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime date_expirationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_orderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long number_black_duckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long number_green_duckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long number_red_duckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal priceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime date_beginning {
            get {
                return this.date_beginningField;
            }
            set {
                if ((this.date_beginningField.Equals(value) != true)) {
                    this.date_beginningField = value;
                    this.RaisePropertyChanged("date_beginning");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime date_expiration {
            get {
                return this.date_expirationField;
            }
            set {
                if ((this.date_expirationField.Equals(value) != true)) {
                    this.date_expirationField = value;
                    this.RaisePropertyChanged("date_expiration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_order {
            get {
                return this.id_orderField;
            }
            set {
                if ((this.id_orderField.Equals(value) != true)) {
                    this.id_orderField = value;
                    this.RaisePropertyChanged("id_order");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long number_black_duck {
            get {
                return this.number_black_duckField;
            }
            set {
                if ((this.number_black_duckField.Equals(value) != true)) {
                    this.number_black_duckField = value;
                    this.RaisePropertyChanged("number_black_duck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long number_green_duck {
            get {
                return this.number_green_duckField;
            }
            set {
                if ((this.number_green_duckField.Equals(value) != true)) {
                    this.number_green_duckField = value;
                    this.RaisePropertyChanged("number_green_duck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long number_red_duck {
            get {
                return this.number_red_duckField;
            }
            set {
                if ((this.number_red_duckField.Equals(value) != true)) {
                    this.number_red_duckField = value;
                    this.RaisePropertyChanged("number_red_duck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal price {
            get {
                return this.priceField;
            }
            set {
                if ((this.priceField.Equals(value) != true)) {
                    this.priceField = value;
                    this.RaisePropertyChanged("price");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Ducks", Namespace="http://schemas.datacontract.org/2004/07/WcfRentOfDucks")]
    [System.SerializableAttribute()]
    public partial class Ducks : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string colorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_duckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long number_in_stockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long number_leasedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal priceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string color {
            get {
                return this.colorField;
            }
            set {
                if ((object.ReferenceEquals(this.colorField, value) != true)) {
                    this.colorField = value;
                    this.RaisePropertyChanged("color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_duck {
            get {
                return this.id_duckField;
            }
            set {
                if ((this.id_duckField.Equals(value) != true)) {
                    this.id_duckField = value;
                    this.RaisePropertyChanged("id_duck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long number_in_stock {
            get {
                return this.number_in_stockField;
            }
            set {
                if ((this.number_in_stockField.Equals(value) != true)) {
                    this.number_in_stockField = value;
                    this.RaisePropertyChanged("number_in_stock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long number_leased {
            get {
                return this.number_leasedField;
            }
            set {
                if ((this.number_leasedField.Equals(value) != true)) {
                    this.number_leasedField = value;
                    this.RaisePropertyChanged("number_leased");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal price {
            get {
                return this.priceField;
            }
            set {
                if ((this.priceField.Equals(value) != true)) {
                    this.priceField = value;
                    this.RaisePropertyChanged("price");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderDuck", Namespace="http://schemas.datacontract.org/2004/07/WcfRentOfDucks")]
    [System.SerializableAttribute()]
    public partial class OrderDuck : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_duckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_orderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_order_duckField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_duck {
            get {
                return this.id_duckField;
            }
            set {
                if ((this.id_duckField.Equals(value) != true)) {
                    this.id_duckField = value;
                    this.RaisePropertyChanged("id_duck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_order {
            get {
                return this.id_orderField;
            }
            set {
                if ((this.id_orderField.Equals(value) != true)) {
                    this.id_orderField = value;
                    this.RaisePropertyChanged("id_order");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_order_duck {
            get {
                return this.id_order_duckField;
            }
            set {
                if ((this.id_order_duckField.Equals(value) != true)) {
                    this.id_order_duckField = value;
                    this.RaisePropertyChanged("id_order_duck");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        RentOfDucks.ServiceReference.CompositeType GetDataUsingDataContract(RentOfDucks.ServiceReference.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<RentOfDucks.ServiceReference.CompositeType> GetDataUsingDataContractAsync(RentOfDucks.ServiceReference.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertOrder", ReplyAction="http://tempuri.org/IService1/InsertOrderResponse")]
        int InsertOrder(RentOfDucks.ServiceReference.Orders o);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertOrder", ReplyAction="http://tempuri.org/IService1/InsertOrderResponse")]
        System.Threading.Tasks.Task<int> InsertOrderAsync(RentOfDucks.ServiceReference.Orders o);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateOrder", ReplyAction="http://tempuri.org/IService1/UpdateOrderResponse")]
        int UpdateOrder(RentOfDucks.ServiceReference.Orders o);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateOrder", ReplyAction="http://tempuri.org/IService1/UpdateOrderResponse")]
        System.Threading.Tasks.Task<int> UpdateOrderAsync(RentOfDucks.ServiceReference.Orders o);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteOrder", ReplyAction="http://tempuri.org/IService1/DeleteOrderResponse")]
        int DeleteOrder(RentOfDucks.ServiceReference.Orders o);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteOrder", ReplyAction="http://tempuri.org/IService1/DeleteOrderResponse")]
        System.Threading.Tasks.Task<int> DeleteOrderAsync(RentOfDucks.ServiceReference.Orders o);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateDuck", ReplyAction="http://tempuri.org/IService1/UpdateDuckResponse")]
        int UpdateDuck(RentOfDucks.ServiceReference.Ducks d);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateDuck", ReplyAction="http://tempuri.org/IService1/UpdateDuckResponse")]
        System.Threading.Tasks.Task<int> UpdateDuckAsync(RentOfDucks.ServiceReference.Ducks d);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertOrderDuck", ReplyAction="http://tempuri.org/IService1/InsertOrderDuckResponse")]
        int InsertOrderDuck(RentOfDucks.ServiceReference.OrderDuck od);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertOrderDuck", ReplyAction="http://tempuri.org/IService1/InsertOrderDuckResponse")]
        System.Threading.Tasks.Task<int> InsertOrderDuckAsync(RentOfDucks.ServiceReference.OrderDuck od);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteOrderDuck", ReplyAction="http://tempuri.org/IService1/DeleteOrderDuckResponse")]
        int DeleteOrderDuck(RentOfDucks.ServiceReference.OrderDuck od);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteOrderDuck", ReplyAction="http://tempuri.org/IService1/DeleteOrderDuckResponse")]
        System.Threading.Tasks.Task<int> DeleteOrderDuckAsync(RentOfDucks.ServiceReference.OrderDuck od);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllOrders", ReplyAction="http://tempuri.org/IService1/GetAllOrdersResponse")]
        RentOfDucks.ServiceReference.Orders[] GetAllOrders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllOrders", ReplyAction="http://tempuri.org/IService1/GetAllOrdersResponse")]
        System.Threading.Tasks.Task<RentOfDucks.ServiceReference.Orders[]> GetAllOrdersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllDucks", ReplyAction="http://tempuri.org/IService1/GetAllDucksResponse")]
        RentOfDucks.ServiceReference.Ducks[] GetAllDucks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllDucks", ReplyAction="http://tempuri.org/IService1/GetAllDucksResponse")]
        System.Threading.Tasks.Task<RentOfDucks.ServiceReference.Ducks[]> GetAllDucksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDucksInStock", ReplyAction="http://tempuri.org/IService1/GetDucksInStockResponse")]
        long GetDucksInStock(RentOfDucks.ServiceReference.Ducks d);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDucksInStock", ReplyAction="http://tempuri.org/IService1/GetDucksInStockResponse")]
        System.Threading.Tasks.Task<long> GetDucksInStockAsync(RentOfDucks.ServiceReference.Ducks d);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDucksPrice", ReplyAction="http://tempuri.org/IService1/GetDucksPriceResponse")]
        decimal GetDucksPrice(RentOfDucks.ServiceReference.Ducks d);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDucksPrice", ReplyAction="http://tempuri.org/IService1/GetDucksPriceResponse")]
        System.Threading.Tasks.Task<decimal> GetDucksPriceAsync(RentOfDucks.ServiceReference.Ducks d);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDucksLeased", ReplyAction="http://tempuri.org/IService1/GetDucksLeasedResponse")]
        long GetDucksLeased(RentOfDucks.ServiceReference.Ducks d);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDucksLeased", ReplyAction="http://tempuri.org/IService1/GetDucksLeasedResponse")]
        System.Threading.Tasks.Task<long> GetDucksLeasedAsync(RentOfDucks.ServiceReference.Ducks d);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/MaxOrderId", ReplyAction="http://tempuri.org/IService1/MaxOrderIdResponse")]
        int MaxOrderId();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/MaxOrderId", ReplyAction="http://tempuri.org/IService1/MaxOrderIdResponse")]
        System.Threading.Tasks.Task<int> MaxOrderIdAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetNumberDuck", ReplyAction="http://tempuri.org/IService1/GetNumberDuckResponse")]
        long GetNumberDuck(RentOfDucks.ServiceReference.Orders o, string s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetNumberDuck", ReplyAction="http://tempuri.org/IService1/GetNumberDuckResponse")]
        System.Threading.Tasks.Task<long> GetNumberDuckAsync(RentOfDucks.ServiceReference.Orders o, string s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDateOrder", ReplyAction="http://tempuri.org/IService1/GetDateOrderResponse")]
        System.DateTime GetDateOrder(RentOfDucks.ServiceReference.Orders o, string s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDateOrder", ReplyAction="http://tempuri.org/IService1/GetDateOrderResponse")]
        System.Threading.Tasks.Task<System.DateTime> GetDateOrderAsync(RentOfDucks.ServiceReference.Orders o, string s);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : RentOfDucks.ServiceReference.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<RentOfDucks.ServiceReference.IService1>, RentOfDucks.ServiceReference.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public RentOfDucks.ServiceReference.CompositeType GetDataUsingDataContract(RentOfDucks.ServiceReference.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<RentOfDucks.ServiceReference.CompositeType> GetDataUsingDataContractAsync(RentOfDucks.ServiceReference.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public int InsertOrder(RentOfDucks.ServiceReference.Orders o) {
            return base.Channel.InsertOrder(o);
        }
        
        public System.Threading.Tasks.Task<int> InsertOrderAsync(RentOfDucks.ServiceReference.Orders o) {
            return base.Channel.InsertOrderAsync(o);
        }
        
        public int UpdateOrder(RentOfDucks.ServiceReference.Orders o) {
            return base.Channel.UpdateOrder(o);
        }
        
        public System.Threading.Tasks.Task<int> UpdateOrderAsync(RentOfDucks.ServiceReference.Orders o) {
            return base.Channel.UpdateOrderAsync(o);
        }
        
        public int DeleteOrder(RentOfDucks.ServiceReference.Orders o) {
            return base.Channel.DeleteOrder(o);
        }
        
        public System.Threading.Tasks.Task<int> DeleteOrderAsync(RentOfDucks.ServiceReference.Orders o) {
            return base.Channel.DeleteOrderAsync(o);
        }
        
        public int UpdateDuck(RentOfDucks.ServiceReference.Ducks d) {
            return base.Channel.UpdateDuck(d);
        }
        
        public System.Threading.Tasks.Task<int> UpdateDuckAsync(RentOfDucks.ServiceReference.Ducks d) {
            return base.Channel.UpdateDuckAsync(d);
        }
        
        public int InsertOrderDuck(RentOfDucks.ServiceReference.OrderDuck od) {
            return base.Channel.InsertOrderDuck(od);
        }
        
        public System.Threading.Tasks.Task<int> InsertOrderDuckAsync(RentOfDucks.ServiceReference.OrderDuck od) {
            return base.Channel.InsertOrderDuckAsync(od);
        }
        
        public int DeleteOrderDuck(RentOfDucks.ServiceReference.OrderDuck od) {
            return base.Channel.DeleteOrderDuck(od);
        }
        
        public System.Threading.Tasks.Task<int> DeleteOrderDuckAsync(RentOfDucks.ServiceReference.OrderDuck od) {
            return base.Channel.DeleteOrderDuckAsync(od);
        }
        
        public RentOfDucks.ServiceReference.Orders[] GetAllOrders() {
            return base.Channel.GetAllOrders();
        }
        
        public System.Threading.Tasks.Task<RentOfDucks.ServiceReference.Orders[]> GetAllOrdersAsync() {
            return base.Channel.GetAllOrdersAsync();
        }
        
        public RentOfDucks.ServiceReference.Ducks[] GetAllDucks() {
            return base.Channel.GetAllDucks();
        }
        
        public System.Threading.Tasks.Task<RentOfDucks.ServiceReference.Ducks[]> GetAllDucksAsync() {
            return base.Channel.GetAllDucksAsync();
        }
        
        public long GetDucksInStock(RentOfDucks.ServiceReference.Ducks d) {
            return base.Channel.GetDucksInStock(d);
        }
        
        public System.Threading.Tasks.Task<long> GetDucksInStockAsync(RentOfDucks.ServiceReference.Ducks d) {
            return base.Channel.GetDucksInStockAsync(d);
        }
        
        public decimal GetDucksPrice(RentOfDucks.ServiceReference.Ducks d) {
            return base.Channel.GetDucksPrice(d);
        }
        
        public System.Threading.Tasks.Task<decimal> GetDucksPriceAsync(RentOfDucks.ServiceReference.Ducks d) {
            return base.Channel.GetDucksPriceAsync(d);
        }
        
        public long GetDucksLeased(RentOfDucks.ServiceReference.Ducks d) {
            return base.Channel.GetDucksLeased(d);
        }
        
        public System.Threading.Tasks.Task<long> GetDucksLeasedAsync(RentOfDucks.ServiceReference.Ducks d) {
            return base.Channel.GetDucksLeasedAsync(d);
        }
        
        public int MaxOrderId() {
            return base.Channel.MaxOrderId();
        }
        
        public System.Threading.Tasks.Task<int> MaxOrderIdAsync() {
            return base.Channel.MaxOrderIdAsync();
        }
        
        public long GetNumberDuck(RentOfDucks.ServiceReference.Orders o, string s) {
            return base.Channel.GetNumberDuck(o, s);
        }
        
        public System.Threading.Tasks.Task<long> GetNumberDuckAsync(RentOfDucks.ServiceReference.Orders o, string s) {
            return base.Channel.GetNumberDuckAsync(o, s);
        }
        
        public System.DateTime GetDateOrder(RentOfDucks.ServiceReference.Orders o, string s) {
            return base.Channel.GetDateOrder(o, s);
        }
        
        public System.Threading.Tasks.Task<System.DateTime> GetDateOrderAsync(RentOfDucks.ServiceReference.Orders o, string s) {
            return base.Channel.GetDateOrderAsync(o, s);
        }
    }
}
